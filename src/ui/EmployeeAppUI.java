/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.awt.Image;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.regex.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Employee;

/**
 *
 * @author rajmehta
 */
public class EmployeeAppUI extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeAppUI
     */
    
    
    // Global Variables
    int employeeId, age;
    String name, startDate, level, gender, teamInfo, positionTitle, email, uploadImgPath;
    double mobileNumber;
    ArrayList<Employee> employeeList = new ArrayList<Employee>();
    
    Employee employee = new Employee();
    
    Pattern pattern;
    Matcher matcher;
    
    static final String EMAIL_PATTERN = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"+ "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

    public EmployeeAppUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGrp = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        creatTab = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        employeeIDLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        startDateLabel = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        teamInfoLabel = new javax.swing.JLabel();
        positionTitleLabel = new javax.swing.JLabel();
        cellPhoneNumberLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        photoLabel = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        nameTextField = new javax.swing.JTextField();
        employeeIDTextField = new javax.swing.JTextField();
        ageTextField = new javax.swing.JTextField();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        other = new javax.swing.JRadioButton();
        levelTextField = new javax.swing.JTextField();
        teamInfoTextField = new javax.swing.JTextField();
        positionTitleTextField = new javax.swing.JTextField();
        mobileTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        uploadImageButton = new javax.swing.JButton();
        startDateTextField = new com.toedter.calendar.JDateChooser();
        readTab = new javax.swing.JPanel();
        Read = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        updateTab = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        updateButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        filterUpdate = new javax.swing.JComboBox<>();
        inValueUpdate = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        filterUpdateNew = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        updateValueNew = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        displayImgUpdate = new javax.swing.JLabel();
        displayNameUpdate = new javax.swing.JTextField();
        displayEidUpdate = new javax.swing.JTextField();
        displayAgeUpdate = new javax.swing.JTextField();
        displayGenderUpdate = new javax.swing.JTextField();
        displayStartDateUpdate = new javax.swing.JTextField();
        displayLevelUpdate = new javax.swing.JTextField();
        displayTeamInfoUpdate = new javax.swing.JTextField();
        displayPositionTitleUpdate = new javax.swing.JTextField();
        displayMobileUpdate = new javax.swing.JTextField();
        displayEmailUpdate = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        filterEmployee = new javax.swing.JComboBox<>();
        valueFilter = new javax.swing.JTextField();
        searchEmployeeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        userFilter2 = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        userFilter3 = new javax.swing.JComboBox<>();
        userValue2 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        userValue3 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        displayName = new javax.swing.JTextField();
        displayEid = new javax.swing.JTextField();
        displayAge = new javax.swing.JTextField();
        displayGender = new javax.swing.JTextField();
        displayStartDate = new javax.swing.JTextField();
        displayLevel = new javax.swing.JTextField();
        displayTeamInfo = new javax.swing.JTextField();
        displayPositionTitle = new javax.swing.JTextField();
        displayMobile = new javax.swing.JTextField();
        displayEmail = new javax.swing.JTextField();
        displayPic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setFont(new java.awt.Font("Krungthep", 1, 24)); // NOI18N
        Title.setText("Add Employee Record");

        nameLabel.setText("Name");

        employeeIDLabel.setText("Employee ID");

        ageLabel.setText("Age");

        genderLabel.setText("Gender");

        startDateLabel.setText("Start Date");

        levelLabel.setText("Level");

        teamInfoLabel.setText("Team Info");

        positionTitleLabel.setText("Position Title");

        cellPhoneNumberLabel.setText("Mobile Number");

        emailLabel.setText("Email");

        photoLabel.setText("Photo");

        createButton.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        employeeIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeIDTextFieldActionPerformed(evt);
            }
        });

        ageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTextFieldActionPerformed(evt);
            }
        });

        genderButtonGrp.add(male);
        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        genderButtonGrp.add(female);
        female.setText("Female");
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });

        genderButtonGrp.add(other);
        other.setText("Other");

        uploadImageButton.setText("Upload Image..");
        uploadImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadImageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout creatTabLayout = new javax.swing.GroupLayout(creatTab);
        creatTab.setLayout(creatTabLayout);
        creatTabLayout.setHorizontalGroup(
            creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatTabLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(emailLabel)
                        .addComponent(photoLabel))
                    .addGroup(creatTabLayout.createSequentialGroup()
                        .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(positionTitleLabel)
                            .addComponent(cellPhoneNumberLabel)
                            .addComponent(teamInfoLabel)
                            .addComponent(levelLabel)
                            .addComponent(startDateLabel)
                            .addComponent(genderLabel)
                            .addComponent(ageLabel)
                            .addComponent(employeeIDLabel)
                            .addComponent(nameLabel))
                        .addGap(1, 1, 1)))
                .addGap(45, 45, 45)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ageTextField)
                        .addComponent(employeeIDTextField)
                        .addComponent(nameTextField)
                        .addComponent(emailTextField)
                        .addComponent(mobileTextField)
                        .addComponent(positionTitleTextField)
                        .addComponent(teamInfoTextField)
                        .addComponent(uploadImageButton, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                        .addGroup(creatTabLayout.createSequentialGroup()
                            .addComponent(male)
                            .addGap(18, 18, 18)
                            .addComponent(female)
                            .addGap(18, 18, 18)
                            .addComponent(other))
                        .addComponent(levelTextField)
                        .addComponent(startDateTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(128, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creatTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(218, 218, 218))
        );
        creatTabLayout.setVerticalGroup(
            creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creatTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeIDLabel)
                    .addComponent(employeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageLabel)
                    .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(creatTabLayout.createSequentialGroup()
                        .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(male)
                            .addComponent(female)
                            .addComponent(other))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(startDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(creatTabLayout.createSequentialGroup()
                        .addComponent(genderLabel)
                        .addGap(18, 18, 18)
                        .addComponent(startDateLabel)))
                .addGap(9, 9, 9)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(levelLabel)
                    .addComponent(levelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teamInfoLabel)
                    .addComponent(teamInfoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(positionTitleLabel)
                    .addComponent(positionTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cellPhoneNumberLabel)
                    .addComponent(mobileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(creatTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(photoLabel)
                    .addComponent(uploadImageButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createButton, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        jTabbedPane1.addTab("Create", creatTab);

        Read.setText("Read");
        Read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReadActionPerformed(evt);
            }
        });

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "name", "EmployeeID", "age", "gender", "start date", "level", "team info", "position title", "mobile", "email", "photo"
            }
        ));
        jScrollPane1.setViewportView(employeeTable);

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout readTabLayout = new javax.swing.GroupLayout(readTab);
        readTab.setLayout(readTabLayout);
        readTabLayout.setHorizontalGroup(
            readTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(readTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Read, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addContainerGap())
        );
        readTabLayout.setVerticalGroup(
            readTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readTabLayout.createSequentialGroup()
                .addGroup(readTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(readTabLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(readTabLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(Read)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Read / Delete", readTab);

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        jLabel14.setText("Select Filter:");

        jLabel15.setText("Value:");

        filterUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "name", "employeeId", "age", "gender", "startDate", "level", "teamInfo", "positionTitle", "mobile", "email" }));

        jLabel16.setText("Update Value:");

        filterUpdateNew.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "name", "employeeId", "age", "gender", "startDate", "level", "teamInfo", "positionTitle", "mobile", "email" }));
        filterUpdateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterUpdateNewActionPerformed(evt);
            }
        });

        jLabel17.setText("Update to:");

        updateValueNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateValueNewActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel18.setText("Updated Employee Info");

        jLabel19.setText("Name:");

        jLabel20.setText("EmployeeId:");

        jLabel21.setText("Age:");

        jLabel22.setText("Gender:");

        jLabel23.setText("StartDate:");

        jLabel24.setText("Level:");

        jLabel25.setText("TeamInfo:");

        jLabel26.setText("PositionTitle:");

        jLabel27.setText("Mobile:");

        jLabel28.setText("Email:");

        displayNameUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayNameUpdateActionPerformed(evt);
            }
        });

        displayAgeUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAgeUpdateActionPerformed(evt);
            }
        });

        displayStartDateUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStartDateUpdateActionPerformed(evt);
            }
        });

        displayLevelUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayLevelUpdateActionPerformed(evt);
            }
        });

        displayEmailUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayEmailUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addComponent(updateValueNew)
                    .addComponent(filterUpdateNew, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inValueUpdate)
                    .addComponent(filterUpdate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(jLabel18))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20))))
                        .addGap(0, 53, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel23)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel24)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel28)
                                        .addComponent(jLabel27)))))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(displayLevelUpdate)
                            .addComponent(displayAgeUpdate)
                            .addComponent(displayGenderUpdate)
                            .addComponent(displayEidUpdate)
                            .addComponent(displayNameUpdate)
                            .addComponent(displayStartDateUpdate)
                            .addComponent(displayTeamInfoUpdate)
                            .addComponent(displayPositionTitleUpdate)
                            .addComponent(displayMobileUpdate)
                            .addComponent(displayEmailUpdate))))
                .addGap(20, 20, 20)
                .addComponent(displayImgUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel14)
                        .addGap(2, 2, 2)
                        .addComponent(filterUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(displayImgUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel19)
                    .addComponent(displayNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inValueUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayEidUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(displayAgeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(displayGenderUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(displayStartDateUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterUpdateNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(displayLevelUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel25)
                    .addComponent(displayTeamInfoUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateValueNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(displayPositionTitleUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayMobileUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(displayEmailUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(updateButton)
                        .addGap(21, 21, 21))))
        );

        jSplitPane2.setRightComponent(jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
        );

        jSplitPane2.setLeftComponent(jPanel4);

        javax.swing.GroupLayout updateTabLayout = new javax.swing.GroupLayout(updateTab);
        updateTab.setLayout(updateTabLayout);
        updateTabLayout.setHorizontalGroup(
            updateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2)
                .addContainerGap())
        );
        updateTabLayout.setVerticalGroup(
            updateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Update", updateTab);

        filterEmployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "name", "employeeId", "age", "gender", "startDate", "level", "teamInfo", "positionTitle", "mobile", "email" }));
        filterEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterEmployeeActionPerformed(evt);
            }
        });

        searchEmployeeButton.setText("Search");
        searchEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmployeeButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Filter By:");

        jLabel3.setText("is");

        jLabel29.setText("Filter 2:");

        userFilter2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "name", "employeeId", "age", "gender", "startDate", "level", "teamInfo", "positionTitle", "mobile", "email" }));

        jLabel30.setText("is");

        userFilter3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "name", "employeeId", "age", "gender", "startDate", "level", "teamInfo", "positionTitle", "mobile", "email" }));

        jLabel31.setText("Filter 3:");

        jLabel32.setText("is");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchEmployeeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(userValue3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(userFilter3, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(userValue2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(userFilter2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valueFilter, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(filterEmployee, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filterEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valueFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userValue2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userFilter3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userValue3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(searchEmployeeButton)
                .addGap(18, 18, 18))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Search Employee");

        jLabel4.setText("Name:");

        jLabel5.setText("EmployeeId:");

        jLabel6.setText("Age:");

        jLabel7.setText("Gender:");

        jLabel8.setText("StartDate:");

        jLabel9.setText("Level:");

        jLabel10.setText("TeamInfo:");

        jLabel11.setText("PositionTitle:");

        jLabel12.setText("Mobile:");

        jLabel13.setText("Email:");

        displayName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayNameActionPerformed(evt);
            }
        });

        displayLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayLevelActionPerformed(evt);
            }
        });

        displayTeamInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayTeamInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel5))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(displayName)
                            .addComponent(displayAge)
                            .addComponent(displayGender)
                            .addComponent(displayStartDate)
                            .addComponent(displayLevel)
                            .addComponent(displayTeamInfo)
                            .addComponent(displayPositionTitle)
                            .addComponent(displayMobile)
                            .addComponent(displayEmail)
                            .addComponent(displayEid, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(displayPic, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayPic, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(displayName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayEid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(displayAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(displayGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(displayStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(displayLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(displayTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(displayPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(displayMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(displayEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel2);

        jTabbedPane2.addTab("tab1", jSplitPane1);

        jTabbedPane1.addTab("Search", jTabbedPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void displayTeamInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayTeamInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayTeamInfoActionPerformed

    private void displayLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayLevelActionPerformed

    private void displayNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayNameActionPerformed

    private void searchEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmployeeButtonActionPerformed
        // TODO add your handling code here:
        HashMap<String, Integer> filterKeys = new HashMap<String, Integer>();
        Object row[] = new Object[11];
        int index;
        //        name, employeeId, age, gender, startDate, level, teamInfo, positionTitle, mobile, email
        filterKeys.put("name", 0);
        filterKeys.put("employeeId", 1);
        filterKeys.put("age", 2);
        filterKeys.put("gender", 3);
        filterKeys.put("startDate", 4);
        filterKeys.put("level", 5);
        filterKeys.put("teanInfo", 6);
        filterKeys.put("positionTitle", 7);
        filterKeys.put("mobile", 8);
        filterKeys.put("email", 9);

        String userChosenFilter = filterEmployee.getSelectedItem().toString();
        String isFilter = valueFilter.getText().toString();
        
        String userFilter_2 = userFilter2.getSelectedItem().toString();
        String isValue_2 = userValue2.getText().toString();
        
        String userFilter_3 = userFilter3.getSelectedItem().toString();
        String isValue_3 = userValue3.getText().toString();
        
        if(userChosenFilter == userFilter_2 || userChosenFilter == userFilter_3){
            JOptionPane.showMessageDialog(null, "Cannot select same filter");
        }
        else if ((userFilter_2 == userFilter_3) && (userFilter_2 != " ")){
            JOptionPane.showMessageDialog(null, "Cannot select same filter");
        }
        else{
            if((userFilter_2 == " ") && (userFilter_3 == " ")){
                int rows = employeeTable.getRowCount();
                String filterChecker = null;

                for (int i=0; i<rows; i++){
                    Object obj1 = employeeTable.getValueAt(i, filterKeys.get(userChosenFilter));
                    String filterValCheck = obj1.toString();
                    filterChecker = filterValCheck;
                    if(filterValCheck == isFilter.toString()){
                        index = i;
                    }
                }
                
                System.out.println("filterChecker: "+filterChecker);
                System.out.println("isFilter: "+isFilter);

                for(Employee i: employeeList){
                    if(filterChecker.equals(isFilter) ){
                        row[0] = i.getName();
                        row[1] = i.getEmployeeId();
                        row[2] = i.getAge();
                        row[3] = i.getGender();
                        row[4] = i.getStartDate();
                        row[5] = i.getLevel();
                        row[6] = i.getTeamInfo();
                        row[7] = i.getPositionTitle();
                        row[8] = i.getCellPhoneNumber();
                        row[9] = i.getEmail();
                        row[10] = i.getPhoto();
                    }
                    else{System.out.println("Skipped");}
                }

                displayName.setText(String.valueOf(row[0]));
                displayEid.setText(String.valueOf(row[1]));
                displayAge.setText(String.valueOf(row[2]));
                displayGender.setText(String.valueOf(row[3]));
                displayStartDate.setText(String.valueOf(row[4]));
                displayLevel.setText(String.valueOf(row[5]));
                displayTeamInfo.setText(String.valueOf(row[6]));
                displayPositionTitle.setText(String.valueOf(row[7]));
                displayMobile.setText(String.valueOf(row[8]));
                displayEmail.setText(String.valueOf(row[9]));

                String imgPath = String.valueOf(row[10]);
                FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpeg", "jpg");
                JFileChooser browseFile = new JFileChooser();
                ImageIcon img = new ImageIcon(imgPath);

                Image image = img.getImage().getScaledInstance(displayPic.getWidth(), displayPic.getHeight(), Image.SCALE_SMOOTH);
                displayPic.setIcon(new ImageIcon(image));
            }
            if((userFilter_2 != " ") && (userFilter_3 == " ")){
                int rows = employeeTable.getRowCount();
                String filterChecker = null;
                String filterChecker_2 = null;
                
                for (int i=0; i<rows; i++){
                    Object obj1 = employeeTable.getValueAt(i, filterKeys.get(userChosenFilter));
                    String filterValCheck = obj1.toString();
                    filterChecker = filterValCheck;
                    
                    Object obj2 = employeeTable.getValueAt(i, filterKeys.get(userFilter_2));
                    String filterValCheck_2 = obj2.toString();
                    filterChecker_2 = filterValCheck_2;
                    
                    if((filterValCheck == isFilter.toString()) && (filterValCheck_2 == userValue2.toString())){
                        index = i;
                    }
                    
                }
                
                System.out.println("filterChecker: "+filterChecker);
                System.out.println("isFilter: "+isFilter);

                for(Employee i: employeeList){
                    if(filterChecker.equals(isFilter)){
                        row[0] = i.getName();
                        row[1] = i.getEmployeeId();
                        row[2] = i.getAge();
                        row[3] = i.getGender();
                        row[4] = i.getStartDate();
                        row[5] = i.getLevel();
                        row[6] = i.getTeamInfo();
                        row[7] = i.getPositionTitle();
                        row[8] = i.getCellPhoneNumber();
                        row[9] = i.getEmail();
                        row[10] = i.getPhoto();
                    }
                    else{System.out.println("Skipped");}
                }

                displayName.setText(String.valueOf(row[0]));
                displayEid.setText(String.valueOf(row[1]));
                displayAge.setText(String.valueOf(row[2]));
                displayGender.setText(String.valueOf(row[3]));
                displayStartDate.setText(String.valueOf(row[4]));
                displayLevel.setText(String.valueOf(row[5]));
                displayTeamInfo.setText(String.valueOf(row[6]));
                displayPositionTitle.setText(String.valueOf(row[7]));
                displayMobile.setText(String.valueOf(row[8]));
                displayEmail.setText(String.valueOf(row[9]));

                String imgPath = String.valueOf(row[10]);
                FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpeg", "jpg");
                JFileChooser browseFile = new JFileChooser();
                ImageIcon img = new ImageIcon(imgPath);

                Image image = img.getImage().getScaledInstance(displayPic.getWidth(), displayPic.getHeight(), Image.SCALE_SMOOTH);
                displayPic.setIcon(new ImageIcon(image));
            
            }
            if((userFilter_2 != " ") && (userFilter_3 != " ")){
                int rows = employeeTable.getRowCount();
                String filterChecker = null;
                String filterChecker_2 = null;
                String filterChecker_3 = null;
                
                for (int i=0; i<rows; i++){
                    Object obj1 = employeeTable.getValueAt(i, filterKeys.get(userChosenFilter));
                    String filterValCheck = obj1.toString();
                    filterChecker = filterValCheck;
                    
                    Object obj2 = employeeTable.getValueAt(i, filterKeys.get(userFilter_2));
                    String filterValCheck_2 = obj2.toString();
                    filterChecker_2 = filterValCheck_2;
                    
                    Object obj3 = employeeTable.getValueAt(i, filterKeys.get(userFilter_3));
                    String filterValCheck_3 = obj3.toString();
                    filterChecker_3 = filterValCheck_3;
                    
                    if((filterValCheck == isFilter.toString()) && (filterValCheck_2 == userValue2.toString()) && (filterValCheck_3 == userValue3.toString())){
                        index = i;
                    }
                    
                }
                
                System.out.println("filterChecker: "+filterChecker);
                System.out.println("isFilter: "+isFilter);

                for(Employee i: employeeList){
                    if(filterChecker.equals(isFilter)){
                        row[0] = i.getName();
                        row[1] = i.getEmployeeId();
                        row[2] = i.getAge();
                        row[3] = i.getGender();
                        row[4] = i.getStartDate();
                        row[5] = i.getLevel();
                        row[6] = i.getTeamInfo();
                        row[7] = i.getPositionTitle();
                        row[8] = i.getCellPhoneNumber();
                        row[9] = i.getEmail();
                        row[10] = i.getPhoto();
                    }
                    else{System.out.println("Skipped");}
                }

                displayName.setText(String.valueOf(row[0]));
                displayEid.setText(String.valueOf(row[1]));
                displayAge.setText(String.valueOf(row[2]));
                displayGender.setText(String.valueOf(row[3]));
                displayStartDate.setText(String.valueOf(row[4]));
                displayLevel.setText(String.valueOf(row[5]));
                displayTeamInfo.setText(String.valueOf(row[6]));
                displayPositionTitle.setText(String.valueOf(row[7]));
                displayMobile.setText(String.valueOf(row[8]));
                displayEmail.setText(String.valueOf(row[9]));

                String imgPath = String.valueOf(row[10]);
                FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpeg", "jpg");
                JFileChooser browseFile = new JFileChooser();
                ImageIcon img = new ImageIcon(imgPath);

                Image image = img.getImage().getScaledInstance(displayPic.getWidth(), displayPic.getHeight(), Image.SCALE_SMOOTH);
                displayPic.setIcon(new ImageIcon(image));
            
            }
            if((userFilter_2 == " ") && (userFilter_3 != " ")){JOptionPane.showMessageDialog(null, "Please select filter 2 before Filter 3");}
        
        }//end else    
        
        
    }//GEN-LAST:event_searchEmployeeButtonActionPerformed

    private void filterEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterEmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterEmployeeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
        Object delObj = new Object();
        int index = employeeTable.getSelectedRow();
        
        System.out.println("Index:" +index);
        if(index<1){
            JOptionPane.showMessageDialog(null, "Please Select a record");
        }
        else{
            delObj = employeeList.get(index);
            System.out.print("Del Obj" +delObj);
            employeeList.remove(delObj);
            model.removeRow(employeeTable.getSelectedRow());
        }
        
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReadActionPerformed
        // TODO add your handling code here:
        int a =0;

        DefaultTableModel model = (DefaultTableModel) employeeTable.getModel();
        for(Employee i: employeeList){
            Object row[] = new Object[11];
            row[0] = i.getName();
            row[1] = i.getEmployeeId();
            row[2] = i.getAge();
            row[3] = i.getGender();
            row[4] = i.getStartDate();
            row[5] = i.getLevel();
            row[6] = i.getTeamInfo();
            row[7] = i.getPositionTitle();
            row[8] = i.getCellPhoneNumber();
            row[9] = i.getEmail();
            row[10] = i.getPhoto();

            if(a>0){
                int rows = employeeTable.getRowCount();
                for(int j=0; j<rows;j++){
                    Object obj1 = employeeTable.getValueAt(j, 1);
                    String eidCheck = obj1.toString();
                    String validate = String.valueOf(i.getEmployeeId());
                    System.out.println("eid:" + eidCheck);
                    if(eidCheck == validate){
                        System.out.println("Entry not Found");
                    }
                }
            }
            else{
                model.addRow(row);
            }

            a++;
        }
    }//GEN-LAST:event_ReadActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        HashMap<String, Integer> filterKeys = new HashMap<String, Integer>();
        Object row[] = new Object[11];
        int index = 0;
        int flag =0;
        
        filterKeys.put("name", 0);
        filterKeys.put("employeeId", 1);
        filterKeys.put("age", 2);
        filterKeys.put("gender", 3);
        filterKeys.put("startDate", 4);
        filterKeys.put("level", 5);
        filterKeys.put("teanInfo", 6);
        filterKeys.put("positionTitle", 7);
        filterKeys.put("mobile", 8);
        filterKeys.put("email", 9);
        
        String userChosenFilter = filterUpdate.getSelectedItem().toString();
        String isFilter = inValueUpdate.getText().toString();
        int rows = employeeTable.getRowCount();
        String filterChecker = null;
        
        String userUpdateFilter = filterUpdateNew.getSelectedItem().toString();
        String isValue = updateValueNew.getText().toString();

        int new_index = filterKeys.get(userUpdateFilter);
        System.out.println("New Index: "+ new_index);
     
        for (int i=0; i<rows; i++){
            Object obj1 = employeeTable.getValueAt(i, filterKeys.get(userChosenFilter));
            String filterValCheck = obj1.toString();
            filterChecker = filterValCheck;
            System.out.println("obj: "+filterValCheck+ " "+ "from ui: " +isFilter);
            if(filterValCheck.equals(isFilter)){
                index = i;
                flag+=1;
                System.out.println("Flag inc");
            }
            System.out.println("Loop");
        }
        
        if(flag == 0){JOptionPane.showMessageDialog(null, "Entry Not Found");}
        else if(flag>=2){JOptionPane.showMessageDialog(null, "Multiple Entries Found");}
        else{
            System.out.println("filterChecker: "+filterChecker);
            System.out.println("isFilter: "+isFilter);

            for(Employee i: employeeList){
                if(filterChecker.equals(isFilter)){
                    row[0] = i.getName();
                    row[1] = i.getEmployeeId();
                    row[2] = i.getAge();
                    row[3] = i.getGender();
                    row[4] = i.getStartDate();
                    row[5] = i.getLevel();
                    row[6] = i.getTeamInfo();
                    row[7] = i.getPositionTitle();
                    row[8] = i.getCellPhoneNumber();
                    row[9] = i.getEmail();
                    row[10] = i.getPhoto();

                    row[new_index]= isValue;

                    if(userUpdateFilter == "name"){i.setName(isValue);}
                    if(userUpdateFilter == "employeeId"){i.setEmployeeId(Integer.parseInt(isValue));}
                    if(userUpdateFilter == "age"){i.setAge(Integer.parseInt(isValue));}
                    if(userUpdateFilter == "gender"){i.setGender(String.valueOf(isValue));}
                    if(userUpdateFilter == "startDate"){i.setStartDate(String.valueOf(isValue));}
                    if(userUpdateFilter == "level"){i.setLevel(String.valueOf(isValue));}
                    if(userUpdateFilter == "teamInfo"){i.setTeamInfo(String.valueOf(isValue));}
                    if(userUpdateFilter == "positionTitle"){i.setPositionTitle(String.valueOf(isValue));}
                    if(userUpdateFilter == "mobile"){i.setCellPhoneNumber(Double.parseDouble(isValue));}
                    if(userUpdateFilter == "email"){i.setEmail(String.valueOf(isValue));}


                }
                else{
                    JOptionPane.showMessageDialog(null, "Entry Not Found");
                }
            }

            displayNameUpdate.setText(String.valueOf(row[0]));
            displayEidUpdate.setText(String.valueOf(row[1]));
            displayAgeUpdate.setText(String.valueOf(row[2]));
            displayGenderUpdate.setText(String.valueOf(row[3]));
            displayStartDateUpdate.setText(String.valueOf(row[4]));
            displayLevelUpdate.setText(String.valueOf(row[5]));
            displayTeamInfoUpdate.setText(String.valueOf(row[6]));
            displayPositionTitleUpdate.setText(String.valueOf(row[7]));
            displayMobileUpdate.setText(String.valueOf(row[8]));
            displayEmailUpdate.setText(String.valueOf(row[9]));

            String imgPath = String.valueOf(row[10]);
            FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpeg", "jpg");
            JFileChooser browseFile = new JFileChooser();
            ImageIcon img = new ImageIcon(imgPath);

            Image image = img.getImage().getScaledInstance(displayImgUpdate.getWidth(), displayImgUpdate.getHeight(), Image.SCALE_SMOOTH);
            displayImgUpdate.setIcon(new ImageIcon(image));
        }
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void displayNameUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayNameUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayNameUpdateActionPerformed

    private void displayStartDateUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStartDateUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayStartDateUpdateActionPerformed

    private void displayAgeUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAgeUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayAgeUpdateActionPerformed

    private void displayLevelUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayLevelUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayLevelUpdateActionPerformed

    private void displayEmailUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayEmailUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayEmailUpdateActionPerformed

    private void filterUpdateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterUpdateNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterUpdateNewActionPerformed

    private void uploadImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadImageButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser browseImgFile = new JFileChooser();
        int showOpenDialog = browseImgFile.showOpenDialog(null);
        if (showOpenDialog == JFileChooser.APPROVE_OPTION){
            File selectFileImg = browseImgFile.getSelectedFile();
            String imgPath = selectFileImg.getAbsolutePath();
            uploadImgPath = imgPath;
            JOptionPane.showMessageDialog(null, "Image Uploaded Successfully");
        }
    }//GEN-LAST:event_uploadImageButtonActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleActionPerformed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void ageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTextFieldActionPerformed

    private void employeeIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeIDTextFieldActionPerformed

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        // TODO add your handling code here:
        Employee employee = new Employee();
        
        employee.setPhoto(uploadImgPath);
        JOptionPane.showMessageDialog(null, "Save Successful");
        
        employee.setName(nameTextField.getText());
        employee.setEmployeeId(Integer.parseInt(employeeIDTextField.getText()));
        employee.setAge(Integer.parseInt(ageTextField.getText()));

        if(male.isSelected() == true){
            employee.setGender("Male");
        }

        if(female.isSelected() == true){
            employee.setGender("Female");
        }

        if(other.isSelected() == true){
            employee.setGender("Other");
        }

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String startDateString = dateFormat.format(startDateTextField.getDate());
        employee.setStartDate(startDateString);
        employee.setLevel(levelTextField.getText());
        employee.setTeamInfo(teamInfoTextField.getText());
        employee.setPositionTitle(positionTitleTextField.getText());
        employee.setCellPhoneNumber(Double.parseDouble(mobileTextField.getText()));
        employee.setEmail(emailTextField.getText());
        
        employeeList.add(employee);
    }//GEN-LAST:event_createButtonActionPerformed

    private void updateValueNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateValueNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateValueNewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeAppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeAppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeAppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeAppUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeAppUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Read;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JLabel cellPhoneNumberLabel;
    private javax.swing.JPanel creatTab;
    private javax.swing.JButton createButton;
    private javax.swing.JTextField displayAge;
    private javax.swing.JTextField displayAgeUpdate;
    private javax.swing.JTextField displayEid;
    private javax.swing.JTextField displayEidUpdate;
    private javax.swing.JTextField displayEmail;
    private javax.swing.JTextField displayEmailUpdate;
    private javax.swing.JTextField displayGender;
    private javax.swing.JTextField displayGenderUpdate;
    private javax.swing.JLabel displayImgUpdate;
    private javax.swing.JTextField displayLevel;
    private javax.swing.JTextField displayLevelUpdate;
    private javax.swing.JTextField displayMobile;
    private javax.swing.JTextField displayMobileUpdate;
    private javax.swing.JTextField displayName;
    private javax.swing.JTextField displayNameUpdate;
    private javax.swing.JLabel displayPic;
    private javax.swing.JTextField displayPositionTitle;
    private javax.swing.JTextField displayPositionTitleUpdate;
    private javax.swing.JTextField displayStartDate;
    private javax.swing.JTextField displayStartDateUpdate;
    private javax.swing.JTextField displayTeamInfo;
    private javax.swing.JTextField displayTeamInfoUpdate;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel employeeIDLabel;
    private javax.swing.JTextField employeeIDTextField;
    private javax.swing.JTable employeeTable;
    private javax.swing.JRadioButton female;
    private javax.swing.JComboBox<String> filterEmployee;
    private javax.swing.JComboBox<String> filterUpdate;
    private javax.swing.JComboBox<String> filterUpdateNew;
    private javax.swing.ButtonGroup genderButtonGrp;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JTextField inValueUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField levelTextField;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField mobileTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JRadioButton other;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JLabel positionTitleLabel;
    private javax.swing.JTextField positionTitleTextField;
    private javax.swing.JPanel readTab;
    private javax.swing.JButton searchEmployeeButton;
    private javax.swing.JLabel startDateLabel;
    private com.toedter.calendar.JDateChooser startDateTextField;
    private javax.swing.JLabel teamInfoLabel;
    private javax.swing.JTextField teamInfoTextField;
    private javax.swing.JButton updateButton;
    private javax.swing.JPanel updateTab;
    private javax.swing.JTextField updateValueNew;
    private javax.swing.JButton uploadImageButton;
    private javax.swing.JComboBox<String> userFilter2;
    private javax.swing.JComboBox<String> userFilter3;
    private javax.swing.JTextField userValue2;
    private javax.swing.JTextField userValue3;
    private javax.swing.JTextField valueFilter;
    // End of variables declaration//GEN-END:variables

    private Object GetData(JTable employeeTable, int i, int i0) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
