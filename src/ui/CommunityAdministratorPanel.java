/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.*;
import parser.Parser;


/**
 *
 * @author rajmehta
 */
public class CommunityAdministratorPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunityAdministratorPanel
     */
    City city;
    DefaultTableModel model;
    DefaultTableModel model1;
    String[] communityDropboxList;
    String selectedCommunity;
    Community community;
    Hospital hospital;
    House house;
    HospitalDirectory  hospitalDirectory;
    HospitalDirectory  hospDir;
    PersonDirectory pd;
    DoctorDirectory docDir;
    Hospital selectedHospital;
    Person selectedPerson;
    PatientDirectory patDir;
    Doctor update_doc_obj;
    Parser parser = new Parser();
    MainSystem sys;
    Person sel_per_upd;
    
    public CommunityAdministratorPanel() {
        initComponents();
    }
    
    public CommunityAdministratorPanel(MainSystem sys,City city, String[] communityDropboxList, PatientDirectory patDir, HospitalDirectory hospDir, PersonDirectory pd, DoctorDirectory docDir) {
        initComponents();
        this.city = city;
        this.communityDropboxList = communityDropboxList;
        this.pd=pd;
        this.docDir=docDir;
        this.hospitalDirectory = hospDir;
        this.patDir = patDir;
        this.hospDir = hospDir;
        this.sys = sys;
        
        community_dropbox.removeAllItems();

        for(Community c: city.getCommList()){
            community_dropbox.addItem(c.getCommName());
        }
    

    model = (DefaultTableModel) hospital_table.getModel();
    model1 = (DefaultTableModel) house_table.getModel();
    
    /////////////
    ArrayList<Integer> aa = new ArrayList<Integer>();
            
    for(Community c: city.getCommList()){
        for(Hospital h: c.getHospitalList()){
            aa.add(h.getHospNum());
        }      
    }
            
    hopital_list.removeAllItems();
      
    for(int s:aa){
       hopital_list.addItem(String.valueOf(s));
    }
    
    showPersonTable();
    
        for(Community commList:city.getCommList()){
                for(House hosList: commList.getHouseList()){
                    houselistComboBox.addItem(String.valueOf(hosList.getHouseNum()));
                }
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        landingPanel = new javax.swing.JPanel();
        update_hospital = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospital_table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        update_hospital_btn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        house_table = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        house_dropbox = new javax.swing.JComboBox<>();
        community_dropbox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        update_house = new javax.swing.JTextField();
        create_hospital_btn = new javax.swing.JButton();
        update_house_btn = new javax.swing.JButton();
        create_new_house = new javax.swing.JButton();
        search_comm_btn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        hospital_dropbox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        managePatientsButton = new javax.swing.JButton();
        manageDoctorsButton = new javax.swing.JButton();
        manageDoctorsPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        doctor_table = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        doctor_name = new javax.swing.JTextField();
        doctor_cellno = new javax.swing.JTextField();
        doctor_birthdate = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        persontable = new javax.swing.JTable();
        save_updateddoctor = new javax.swing.JButton();
        add_doctorBtn = new javax.swing.JButton();
        populatetables = new javax.swing.JButton();
        hopital_list = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        houseJPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        hospNum1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        streetNamehos = new javax.swing.JTextField();
        communityTextField1 = new javax.swing.JTextField();
        zipcodeTextField1 = new javax.swing.JTextField();
        saveHouseDetails = new javax.swing.JButton();
        cityJTextField1 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        hospitalJPanel = new javax.swing.JPanel();
        zipcodeTextField = new javax.swing.JTextField();
        communityTextField = new javax.swing.JTextField();
        streetName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        hospNum = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cityJTextField = new javax.swing.JTextField();
        saveHospDetails = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        managePersons = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        persontable1 = new javax.swing.JTable();
        personName = new javax.swing.JTextField();
        personAge = new javax.swing.JTextField();
        personDate = new javax.swing.JTextField();
        personContactNo = new javax.swing.JTextField();
        communityComboBox = new javax.swing.JComboBox<>();
        createPersonBtn = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        houselistComboBox = new javax.swing.JComboBox<>();
        addpersontohousebtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setLayout(new java.awt.CardLayout());

        landingPanel.setBackground(new java.awt.Color(0, 118, 82));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Houses in Community:");

        hospital_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hosp num", "StreetName", "City", "ZipCode", "No of Docs"
            }
        ));
        jScrollPane1.setViewportView(hospital_table);

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("New Value:");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Hospitals in Community:");

        update_hospital_btn.setText("Update Hospital");
        update_hospital_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_hospital_btnActionPerformed(evt);
            }
        });

        house_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "House Num", "Street Name", "City", "No of members", "unit Num"
            }
        ));
        jScrollPane2.setViewportView(house_table);

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Modify:");

        house_dropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "houseUnit", "streetName" }));

        community_dropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("New Value:");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Communities");

        create_hospital_btn.setText("Create New Hospital");
        create_hospital_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_hospital_btnActionPerformed(evt);
            }
        });

        update_house_btn.setText("Update House");
        update_house_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_house_btnActionPerformed(evt);
            }
        });

        create_new_house.setText("Create New House");
        create_new_house.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_new_houseActionPerformed(evt);
            }
        });

        search_comm_btn.setText("Search");
        search_comm_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_comm_btnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Modify:");

        hospital_dropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "streetName", "zipCode" }));

        jLabel1.setFont(new java.awt.Font("Zapfino", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Modify the information under a Community");

        managePatientsButton.setText("Manage Person");
        managePatientsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managePatientsButtonActionPerformed(evt);
            }
        });

        manageDoctorsButton.setText("Manage Doctors");
        manageDoctorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageDoctorsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout landingPanelLayout = new javax.swing.GroupLayout(landingPanel);
        landingPanel.setLayout(landingPanelLayout);
        landingPanelLayout.setHorizontalGroup(
            landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(landingPanelLayout.createSequentialGroup()
                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, landingPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(create_hospital_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, landingPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(landingPanelLayout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(manageDoctorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(landingPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(house_dropbox, 0, 127, Short.MAX_VALUE)
                                            .addComponent(update_house)))
                                    .addGroup(landingPanelLayout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(managePatientsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(landingPanelLayout.createSequentialGroup()
                                .addGap(300, 300, 300)
                                .addComponent(update_house_btn))
                            .addGroup(landingPanelLayout.createSequentialGroup()
                                .addGap(217, 217, 217)
                                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(landingPanelLayout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(update_hospital_btn))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landingPanelLayout.createSequentialGroup()
                                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(27, 27, 27)
                                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(update_hospital, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(hospital_dropbox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addContainerGap(188, Short.MAX_VALUE))
                    .addGroup(landingPanelLayout.createSequentialGroup()
                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(landingPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(create_new_house, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(landingPanelLayout.createSequentialGroup()
                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(landingPanelLayout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(community_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(search_comm_btn))
                    .addGroup(landingPanelLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        landingPanelLayout.setVerticalGroup(
            landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landingPanelLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(community_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(search_comm_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(landingPanelLayout.createSequentialGroup()
                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landingPanelLayout.createSequentialGroup()
                                .addComponent(hospital_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(update_hospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landingPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addGap(18, 18, 18)
                        .addComponent(update_hospital_btn)))
                .addGap(18, 18, 18)
                .addComponent(create_hospital_btn)
                .addGap(17, 17, 17)
                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manageDoctorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(managePatientsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel7)
                .addGap(12, 12, 12)
                .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landingPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(create_new_house)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landingPanelLayout.createSequentialGroup()
                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(house_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(landingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(update_house, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(update_house_btn)
                        .addGap(82, 82, 82))))
        );

        add(landingPanel, "card2");

        manageDoctorsPanel.setBackground(new java.awt.Color(0, 118, 82));

        doctor_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Doctor Id", "Contact No", "Doctor Name", "Age", "Community"
            }
        ));
        jScrollPane3.setViewportView(doctor_table);

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Update Doctor");

        jLabel20.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Name:");

        jLabel21.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Contact No:");

        jLabel22.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("BirthDate:");

        persontable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Contact No", "BirthDate", "Community"
            }
        ));
        jScrollPane4.setViewportView(persontable);

        save_updateddoctor.setText("Save");
        save_updateddoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_updateddoctorActionPerformed(evt);
            }
        });

        add_doctorBtn.setText("Add Doctor");
        add_doctorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_doctorBtnActionPerformed(evt);
            }
        });

        populatetables.setText("Populate Tables");
        populatetables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populatetablesActionPerformed(evt);
            }
        });

        hopital_list.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageDoctorsPanelLayout = new javax.swing.GroupLayout(manageDoctorsPanel);
        manageDoctorsPanel.setLayout(manageDoctorsPanelLayout);
        manageDoctorsPanelLayout.setHorizontalGroup(
            manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 845, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(add_doctorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(populatetables, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(hopital_list, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageDoctorsPanelLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(save_updateddoctor)
                                .addGap(19, 19, 19))
                            .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(doctor_name, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(doctor_cellno, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(doctor_birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(124, 124, 124))))
        );
        manageDoctorsPanelLayout.setVerticalGroup(
            manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add_doctorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(populatetables, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hopital_list, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(doctor_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(doctor_cellno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(doctor_birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save_updateddoctor)
                            .addComponent(jButton1))))
                .addContainerGap(201, Short.MAX_VALUE))
        );

        add(manageDoctorsPanel, "card5");

        houseJPanel.setBackground(new java.awt.Color(0, 118, 82));

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("HouseNum");

        hospNum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospNum1ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Zipcode");

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("City");

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Community");

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("StreetName");

        streetNamehos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetNamehosActionPerformed(evt);
            }
        });

        communityTextField1.setEditable(false);
        communityTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                communityTextField1ActionPerformed(evt);
            }
        });

        zipcodeTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipcodeTextField1ActionPerformed(evt);
            }
        });

        saveHouseDetails.setText("Save");
        saveHouseDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveHouseDetailsActionPerformed(evt);
            }
        });

        cityJTextField1.setEditable(false);
        cityJTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityJTextField1ActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Zapfino", 1, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Create New House");

        javax.swing.GroupLayout houseJPanelLayout = new javax.swing.GroupLayout(houseJPanel);
        houseJPanel.setLayout(houseJPanelLayout);
        houseJPanelLayout.setHorizontalGroup(
            houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(houseJPanelLayout.createSequentialGroup()
                .addGroup(houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(houseJPanelLayout.createSequentialGroup()
                        .addGap(397, 397, 397)
                        .addGroup(houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hospNum1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(streetNamehos)
                            .addComponent(communityTextField1)
                            .addComponent(cityJTextField1)
                            .addComponent(zipcodeTextField1)))
                    .addGroup(houseJPanelLayout.createSequentialGroup()
                        .addGap(479, 479, 479)
                        .addComponent(saveHouseDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(houseJPanelLayout.createSequentialGroup()
                        .addGap(417, 417, 417)
                        .addComponent(jLabel28)))
                .addContainerGap(458, Short.MAX_VALUE))
        );
        houseJPanelLayout.setVerticalGroup(
            houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, houseJPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addGroup(houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(hospNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(streetNamehos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(communityTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cityJTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(houseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(zipcodeTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(saveHouseDetails)
                .addGap(215, 215, 215))
        );

        add(houseJPanel, "card4");

        hospitalJPanel.setBackground(new java.awt.Color(0, 118, 82));

        zipcodeTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        zipcodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipcodeTextFieldActionPerformed(evt);
            }
        });

        communityTextField.setEditable(false);
        communityTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        communityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                communityTextFieldActionPerformed(evt);
            }
        });

        streetName.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        streetName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetNameActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("StreetName");

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Community");

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("City");

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Zipcode");

        hospNum.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        hospNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospNumActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("HosNum");

        cityJTextField.setEditable(false);
        cityJTextField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        cityJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityJTextFieldActionPerformed(evt);
            }
        });

        saveHospDetails.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        saveHospDetails.setText("Save");
        saveHospDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveHospDetailsActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Zapfino", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Create New Hospital");

        javax.swing.GroupLayout hospitalJPanelLayout = new javax.swing.GroupLayout(hospitalJPanel);
        hospitalJPanel.setLayout(hospitalJPanelLayout);
        hospitalJPanelLayout.setHorizontalGroup(
            hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospitalJPanelLayout.createSequentialGroup()
                .addContainerGap(409, Short.MAX_VALUE)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hospNum)
                            .addComponent(streetName)
                            .addComponent(communityTextField)
                            .addComponent(cityJTextField)
                            .addComponent(zipcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(saveHospDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(440, 440, 440))
        );
        hospitalJPanelLayout.setVerticalGroup(
            hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospitalJPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(hospNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(streetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(communityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cityJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(zipcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(saveHospDetails)
                .addGap(211, 211, 211))
        );

        add(hospitalJPanel, "card3");

        managePersons.setBackground(new java.awt.Color(0, 118, 82));

        persontable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Dob", "Contact No", "Community"
            }
        ));
        jScrollPane7.setViewportView(persontable1);

        communityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Suffolk", "Sapphire" }));

        createPersonBtn.setText("Create Person");
        createPersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPersonBtnActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Community");

        jLabel24.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Contact No");

        jLabel25.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("DOB");

        jLabel26.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Age");

        jLabel27.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Name");

        addpersontohousebtn.setText("Add Person to House");
        addpersontohousebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addpersontohousebtnActionPerformed(evt);
            }
        });

        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout managePersonsLayout = new javax.swing.GroupLayout(managePersons);
        managePersons.setLayout(managePersonsLayout);
        managePersonsLayout.setHorizontalGroup(
            managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managePersonsLayout.createSequentialGroup()
                .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(managePersonsLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(managePersonsLayout.createSequentialGroup()
                        .addGap(337, 337, 337)
                        .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managePersonsLayout.createSequentialGroup()
                                    .addComponent(createPersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managePersonsLayout.createSequentialGroup()
                                    .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(39, 39, 39)
                                    .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(personName, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(personAge, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(personDate, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(personContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(communityComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(73, 73, 73)))
                            .addGroup(managePersonsLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(houselistComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(addpersontohousebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(229, Short.MAX_VALUE))
        );
        managePersonsLayout.setVerticalGroup(
            managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managePersonsLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personAge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(managePersonsLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(managePersonsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(communityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createPersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(managePersonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(houselistComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addpersontohousebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        add(managePersons, "card6");
    }// </editor-fold>//GEN-END:initComponents

    private void update_hospital_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_hospital_btnActionPerformed
        // TODO add your handling code here:
        if(update_hospital.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Cannot Keep empty");
        }
        else if(hospital_table.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Please select a Hospital");
        }
        else{
            int hospNum_check= (int)model.getValueAt(hospital_table.getSelectedRow(), 0);
    
            String hospupdate_str = update_hospital.getText();

            for(Hospital i:community.getHospitalList()){
                if(hospNum_check == i.getHospNum()){
                    hospital = i;
                }
            }

            String hospitalUpdateCriteria = String.valueOf(hospital_dropbox.getSelectedItem());
            if(hospitalUpdateCriteria == " "){
                JOptionPane.showMessageDialog(this,"Select Valid Dropbox Item");
            }
            else{
                if(hospitalUpdateCriteria == "hospNum"){
                    int new_hospNum = Integer.parseInt(hospupdate_str);
                    hospital.setHospNum(new_hospNum);
                    populateHospTable();
                }

                if(hospitalUpdateCriteria == "streetName"){
                    String new_streetName = hospupdate_str;
                    hospital.setStreetName(new_streetName);
                    populateHospTable();
                }

                if(hospitalUpdateCriteria == "zipCode"){
                    long new_zipCode = Long.parseLong(hospupdate_str);
                    hospital.setZipcode(new_zipCode);
                    populateHospTable();
                }

            }
        }
    }//GEN-LAST:event_update_hospital_btnActionPerformed

    private void create_hospital_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_hospital_btnActionPerformed
        // TODO add your handling code here:
//        CreateNewHospital hospitalPane = new CreateNewHospital(hospital);
        //        splitPane.setRightPanel(hopitalPane);
        hospitalJPanel.setVisible(true);
        landingPanel.setVisible(false);
    }//GEN-LAST:event_create_hospital_btnActionPerformed

    private void update_house_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_house_btnActionPerformed
        // TODO add your handling code here:
        if(update_house.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Cannot Keep empty");
        }
        else if(house_table.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Please select a House");
        }
        else{
            int houseNum_check= (int)model1.getValueAt(house_table.getSelectedRow(), 0);
            String houseupdate_str = update_house.getText();

            for(House i:community.getHouseList()){
                if(houseNum_check == i.getHouseNum()){
                    house = i;
                }
            }

            String houseUpdateCriteria = String.valueOf(house_dropbox.getSelectedItem());
            if(houseUpdateCriteria == " "){
                JOptionPane.showMessageDialog(this,"Select Valid Dropbox Item");
            }
            else{
                if(houseUpdateCriteria == "houseUnit"){
                    String new_houseNum = String.valueOf(houseupdate_str);
                    house.setUnitNum(new_houseNum);
                    populateHouseTable();
                }

                if(houseUpdateCriteria == "streetName"){
                    String new_streetName = houseupdate_str;
                    house.setStreetName(new_streetName);
                    populateHouseTable();
                }

            }
        }

    }//GEN-LAST:event_update_house_btnActionPerformed

    private void search_comm_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_comm_btnActionPerformed
        // TODO add your handling code here:
        selectedCommunity = String.valueOf(community_dropbox.getSelectedItem());

        for(Community c: city.getCommList()){
            if(selectedCommunity == c.getCommName())
            community = c;
        }

        model.setRowCount(0);
        for(Hospital h: community.getHospitalList()){
            Object[] row = new Object[5];
            row[0]= h.getHospNum();
            row[1]= h.getStreetName();
            row[2]= h.getCity();
            row[3]= h.getZipcode();
            row[4]= (h.getDoctorHospital()).size();
            model.addRow(row);
        }
        model1.setRowCount(0);
        for(House h: community.getHouseList()){
            Object[] row = new Object[5];
            row[0]= h.getHouseNum();
            row[1]= h.getStreetName();
            row[2]= h.getCity();
            row[3]= (h.getFamiliyMembers()).size();
            row[4]= h.getUnitNum();
            model1.addRow(row);
        }
        communityTextField.setText(community.getCommName());
        communityTextField1.setText(community.getCommName());
        cityJTextField.setText(city.getCitName());
        cityJTextField1.setText(city.getCitName());
        
    }
        
   public void populateHospTable(){
       for(Community c: city.getCommList()){
            if(selectedCommunity == c.getCommName())
                community = c;
        }
        
        model.setRowCount(0);
        for(Hospital h: community.getHospitalList()){
            Object[] row = new Object[5];
            row[0]= h.getHospNum();
            row[1]= h.getStreetName();
            row[2]= h.getCity();
            row[3]= h.getZipcode();
            row[4]= (h.getDoctorHospital()).size();
            model.addRow(row);
        }
}

    public void populateHouseTable(){
      for(Community c: city.getCommList()){
            if(selectedCommunity == c.getCommName())
                community = c;
        }
        
        model1.setRowCount(0);
        for(House h: community.getHouseList()){
            Object[] row = new Object[5];
            row[0]= h.getHouseNum();
            row[1]= h.getStreetName();
            row[2]= h.getCity();
            row[3]= (h.getFamiliyMembers()).size();
            row[4]= h.getUnitNum();
            model1.addRow(row);
        }
    }//GEN-LAST:event_search_comm_btnActionPerformed

    private void zipcodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipcodeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipcodeTextFieldActionPerformed

    private void communityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_communityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_communityTextFieldActionPerformed

    private void streetNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetNameActionPerformed

    private void hospNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospNumActionPerformed

    private void cityJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityJTextFieldActionPerformed

    private void saveHospDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveHospDetailsActionPerformed
        // TODO add your handling code here:
        boolean true_hospNum = false;
        int HospNum1 = Integer.parseInt(hospNum.getText());
        
        for (Hospital h:community.getHospitalList()){
            if(h.getHospNum() == HospNum1){
                JOptionPane.showMessageDialog(this,"This Hospital Already Exist");
                true_hospNum = true;
            }
        }
        
        if(!true_hospNum){
            String city1 = cityJTextField.getText();
            String streetName1 = streetName.getText();
            String community1 = communityTextField.getText();
            Long Zipcode1 =Long.parseLong(zipcodeTextField.getText());
            hospitalDirectory = new HospitalDirectory();
            hospitalDirectory.createHospital(HospNum1,streetName1,community1,city1);
            community.createHospital(HospNum1,streetName1,community1,city1);
            populateHospTable();
            JOptionPane.showMessageDialog(this,"New Hospital Created with Id: "+HospNum1);
            
            hospNum.setText("");
            cityJTextField.setText("");
            streetName.setText("");
            communityTextField.setText("");
            zipcodeTextField.setText("");
        }
//        Community cc = city.getCommList();
        
        
    }//GEN-LAST:event_saveHospDetailsActionPerformed

    private void create_new_houseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_new_houseActionPerformed
        // TODO add your handling code here:
        houseJPanel.setVisible(true);
        landingPanel.setVisible(false);
    }//GEN-LAST:event_create_new_houseActionPerformed

    private void hospNum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospNum1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospNum1ActionPerformed

    private void streetNamehosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetNamehosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetNamehosActionPerformed

    private void communityTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_communityTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_communityTextField1ActionPerformed

    private void zipcodeTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipcodeTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipcodeTextField1ActionPerformed

    private void saveHouseDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveHouseDetailsActionPerformed
        // TODO add your handling code here:
        int HospNum1 = Integer.parseInt(hospNum1.getText());
        
        boolean true_houseNum = false;
        
        for (House h:community.getHouseList()){
            if(h.getHouseNum() == HospNum1){
                JOptionPane.showMessageDialog(this,"This House Already Exist");
                true_houseNum = true;
            }
        }
        if(!true_houseNum){
            String city1 = cityJTextField1.getText();
            String streetName1 = streetNamehos.getText();
            String community1 = communityTextField1.getText();
            Long Zipcode1 =Long.parseLong(zipcodeTextField1.getText());
            community.createHouse(HospNum1,streetName1,community1,city1);
            populateHouseTable();
        
            JOptionPane.showMessageDialog(this,"New House Created with Id: "+HospNum1);

            hospNum1.setText("");
            streetNamehos.setText("");
            cityJTextField1.setText("");
            communityTextField1.setText("");
            zipcodeTextField1.setText("");
        }
        
    }//GEN-LAST:event_saveHouseDetailsActionPerformed

    private void cityJTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityJTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityJTextField1ActionPerformed

    private void managePatientsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managePatientsButtonActionPerformed
        // TODO add your handling code here:
        landingPanel.setVisible(false);
        managePersons.setVisible(true);
    }//GEN-LAST:event_managePatientsButtonActionPerformed

    private void manageDoctorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageDoctorsButtonActionPerformed
        // TODO add your handling code here:
        manageDoctorsPanel.setVisible(true);
        landingPanel.setVisible(false);
    }//GEN-LAST:event_manageDoctorsButtonActionPerformed
     DefaultTableModel model12;
    private void populatetablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populatetablesActionPerformed
        // TODO add your handling code here:
        model12 = (DefaultTableModel) persontable.getModel();
        model12.setRowCount(0);
        
        long[] doc_cnum = new long[docDir.getDoctorList().size()];
        
        for(int i=0; i<(docDir.getDoctorList()).size(); i++){
            doc_cnum[i] = docDir.getDoctorList().get(i).getPerson().getContactNo();
            System.out.println("This Docto ss: "+docDir.getDoctorList().get(i).getPerson().getContactNo());
        }
        
        for (Person per : pd.getPersonList()) {
            boolean a = true;
            for(long i : doc_cnum){
                if(i == per.getContactNo()){
                    System.out.print("This Person is a doctor");
                    a = false;
                }
            }
            if(a == true){
                Object[] row = new Object[4];

                row[0] = per.getName();
                row[1] = per.getContactNo();
                row[2] = per.getDob();
                row[3] = per.getComm();
                model12.addRow(row);
                a = true;
            }
        }
        
        DefaultTableModel model11 = (DefaultTableModel) doctor_table.getModel();
        model11.setRowCount(0);

        
            for(Doctor dr: docDir.getDoctorList()){
                Object[] row = new Object[5];
                row[0] = dr.getId();
                row[1] = dr.getPerson().getContactNo();
                row[2] = dr.getPerson().getName();
                row[3] = dr.getPerson().getDob();
                row[4] = community.getCommName();
                model11.addRow(row);
            }
        
    }//GEN-LAST:event_populatetablesActionPerformed

    private void add_doctorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_doctorBtnActionPerformed
        // TODO add your handling code here:
        if(persontable.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Please select a person to add");
        }
        if(hopital_list.getSelectedItem() == null){
            JOptionPane.showMessageDialog(this, "Please select a hospital to add doctor");
        }
        else
        {
            long ppn = (long)model12.getValueAt(persontable.getSelectedRow(),1);
            for(Person p : pd.getPersonList()){
                if(ppn == p.getContactNo()){
                    selectedPerson = p;
                }
            }
            
            
            for(Hospital h : hospitalDirectory.getHospitalList()){
                if(Integer.parseInt((String)hopital_list.getSelectedItem()) == h.getHospNum()){
                    selectedHospital = h;
                }
            }
            
            boolean should_doc = false;
            for(Patient p: patDir.getPatientList()){
                if(p.matchByContact(selectedPerson.getContactNo())){
                    JOptionPane.showMessageDialog(this, "This Person is a Patient and cannot become Doctor");
                    should_doc = true;
                }    
            }
            
            if(!should_doc){
                    Doctor new_doc = new Doctor(selectedPerson);
                    selectedHospital.addDoctorToHospital(new_doc);
                    docDir.addDoctor(new_doc);
                    JOptionPane.showMessageDialog(this, "Added "+selectedPerson.getName()+ " to Hospital");
                    should_doc = false;
                    PopulateManageDoctorTable();
                    
                }
            
        }//end else

    }//GEN-LAST:event_add_doctorBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model11 = (DefaultTableModel) doctor_table.getModel();
        
        if(doctor_table.getSelectedRow()>=0){
            long did_table = (long)model11.getValueAt(doctor_table.getSelectedRow(),0);
            
            for(Hospital h : hospDir.getHospitalList()){
                for(Doctor d: h.getDoctorHospital()){
                    if(did_table == d.getId()){
                        update_doc_obj = d;
                        doctor_name.setText(d.getPerson().getName());
                        doctor_cellno.setText(String.valueOf(d.getPerson().getContactNo()));
                        doctor_birthdate.setText(parser.covertDateToString(d.getPerson().getDob()));
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void createPersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPersonBtnActionPerformed
        // TODO add your handling code here:
        Person newPerson = new Person();
        newPerson.setName(personName.getText());
        newPerson.setAge(Integer.parseInt(personAge.getText()));
        //         String dob = "1-Jan-2021";
        Parser parser = new Parser();
        LocalDate date =parser.convertToDate(personDate.getText());
        newPerson.setDob(date);
        newPerson.setContactNo(Long.parseLong(personContactNo.getText()));
        newPerson.setComm(communityComboBox.getSelectedItem()+"");
        pd.addPersonToDirectory(newPerson);
        showPersonTable();

    }//GEN-LAST:event_createPersonBtnActionPerformed

    private void showPersonTable(){
        DefaultTableModel model1 = (DefaultTableModel) persontable1.getModel();
        model1.setRowCount(0);

        for (Person person : pd.getPersonList()) {
            Object[] row = new Object[5];
            
            row[0] = person;
            row[1] = person.getAge();
            row[2] = person.getDob();
            row[3] = person.getContactNo();
            row[4] = person.getComm();
            model1.addRow(row);

        }
    }
    private void addpersontohousebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addpersontohousebtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = persontable1.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        else{
            DefaultTableModel modelperson = (DefaultTableModel) persontable1.getModel();
            Person personobj = (Person) modelperson.getValueAt(selectedRowIndex, 0);
            for(City cityList: sys.getCityList()){
                for(Community commList:cityList.getCommList()){
                    for(House hosList: commList.getHouseList()){
                        if((hosList.getHouseNum()) == Integer.parseInt(houselistComboBox.getSelectedItem()+"")){
                            hosList.addPersonToHouse(personobj);
                            JOptionPane.showMessageDialog(this, "Person added to house");
                            return;
                        }

                    }

                }
            }
        }

    }//GEN-LAST:event_addpersontohousebtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = persontable1.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view person info");
            return;
        }
        else{
        DefaultTableModel model = (DefaultTableModel) persontable1.getModel();
        Person personobj = (Person) model.getValueAt(selectedRowIndex, 0);
        personName.setText(String.valueOf(personobj.getName()));
        personAge.setText(String.valueOf(personobj.getAge()));
        personDate.setText(parser.covertDateToString(personobj.getDob()));
        personContactNo.setText(String.valueOf(personobj.getContactNo()));
        communityComboBox.setSelectedItem(String.valueOf(personobj.getComm()));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Parser parser = new Parser();
        int selectedRowIndex = persontable1.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update info");
            return;
        }
        else{
            DefaultTableModel model = (DefaultTableModel) persontable1.getModel();
            long sel_pcno = (long) model.getValueAt(selectedRowIndex, 3);
            for(Person p: pd.getPersonList()){
                if(sel_pcno == p.getContactNo()){
                    sel_per_upd = p;
                }
            }
            
            sel_per_upd.setName(personName.getText());
            if(parser.isInteger(personAge.getText())){
                sel_per_upd.setAge(Integer.parseInt(personAge.getText()));
            }
            else{JOptionPane.showMessageDialog(this, "Type Mismached");}
            
            LocalDate date =parser.convertToDate(personDate.getText());
            
            if(parser.isLong(personContactNo.getText()) || parser.isInteger(personContactNo.getText())){
                sel_per_upd.setContactNo(Long.parseLong(personContactNo.getText()));
            }
            else{JOptionPane.showMessageDialog(this, "Type Mismached");}
            
            sel_per_upd.setDob(date);
            
            sel_per_upd.setComm(communityComboBox.getSelectedItem()+"");
            showPersonTable();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void save_updateddoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_updateddoctorActionPerformed
        // TODO add your handling code here:
        long dno_table = 2345634;
        String dname_table = String.valueOf(doctor_name.getText());
        if(parser.isLong(doctor_cellno.getText()) || parser.isInteger(doctor_cellno.getText())){
            dno_table = Long.parseLong(doctor_cellno.getText());
        }
        else{ JOptionPane.showMessageDialog(this, "Type Mismached"); }
        
        LocalDate ddon_table = parser.convertToDate(doctor_birthdate.getText());
        update_doc_obj.getPerson().setName(dname_table);
        update_doc_obj.getPerson().setContactNo(dno_table);
        update_doc_obj.getPerson().setDob(ddon_table);
    }//GEN-LAST:event_save_updateddoctorActionPerformed
     
    public void PopulateManageDoctorTable(){
        DefaultTableModel model11 = (DefaultTableModel) doctor_table.getModel();
        model11.setRowCount(0);

        for(Doctor dr: docDir.getDoctorList()){
            Object[] row = new Object[5];
            row[0] = dr.getId();
            row[1] = dr.getPerson().getContactNo();
            row[2] = dr.getPerson().getName();
            row[3] = dr.getPerson().getDob();
            model11.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_doctorBtn;
    private javax.swing.JButton addpersontohousebtn;
    private javax.swing.JTextField cityJTextField;
    private javax.swing.JTextField cityJTextField1;
    private javax.swing.JComboBox<String> communityComboBox;
    private javax.swing.JTextField communityTextField;
    private javax.swing.JTextField communityTextField1;
    private javax.swing.JComboBox<String> community_dropbox;
    private javax.swing.JButton createPersonBtn;
    private javax.swing.JButton create_hospital_btn;
    private javax.swing.JButton create_new_house;
    private javax.swing.JTextField doctor_birthdate;
    private javax.swing.JTextField doctor_cellno;
    private javax.swing.JTextField doctor_name;
    private javax.swing.JTable doctor_table;
    private javax.swing.JComboBox<String> hopital_list;
    private javax.swing.JTextField hospNum;
    private javax.swing.JTextField hospNum1;
    private javax.swing.JPanel hospitalJPanel;
    private javax.swing.JComboBox<String> hospital_dropbox;
    private javax.swing.JTable hospital_table;
    private javax.swing.JPanel houseJPanel;
    private javax.swing.JComboBox<String> house_dropbox;
    private javax.swing.JTable house_table;
    private javax.swing.JComboBox<String> houselistComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPanel landingPanel;
    private javax.swing.JButton manageDoctorsButton;
    private javax.swing.JPanel manageDoctorsPanel;
    private javax.swing.JButton managePatientsButton;
    private javax.swing.JPanel managePersons;
    private javax.swing.JTextField personAge;
    private javax.swing.JTextField personContactNo;
    private javax.swing.JTextField personDate;
    private javax.swing.JTextField personName;
    private javax.swing.JTable persontable;
    private javax.swing.JTable persontable1;
    private javax.swing.JButton populatetables;
    private javax.swing.JButton saveHospDetails;
    private javax.swing.JButton saveHouseDetails;
    private javax.swing.JButton save_updateddoctor;
    private javax.swing.JButton search_comm_btn;
    private javax.swing.JTextField streetName;
    private javax.swing.JTextField streetNamehos;
    private javax.swing.JTextField update_hospital;
    private javax.swing.JButton update_hospital_btn;
    private javax.swing.JTextField update_house;
    private javax.swing.JButton update_house_btn;
    private javax.swing.JTextField zipcodeTextField;
    private javax.swing.JTextField zipcodeTextField1;
    // End of variables declaration//GEN-END:variables
}
