/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.*;
import parser.Parser;

/**
 *
 * @author rajmehta
 */
public class HospitalAdministratorPanel extends javax.swing.JPanel {
    
    Community comm = new Community();
    Patient pat =new Patient();
    ArrayList<Community> commList;
    ArrayList<Patient> patList;
    Parser parser = new Parser();
    PatientDirectory patDir; 
    Hospital newHospital;
    ArrayList<Doctor> docs;
    String patCommunity = "";
    City city;
    Community community;
    HospitalDirectory hospDir;
    Doctor dd;
    Hospital hh;
    Hospital hospital;
    DefaultTableModel model;
    HospitalDirectory  hospitalDirectory;
    PersonDirectory pd;
    DoctorDirectory docDir;
    Hospital selectedHospital;
    Person selectedPerson;
    DefaultTableModel model12;
    Doctor update_doc_obj;
    MainSystem system;
    Community create_hosp;
    City create_hosp_comm;
    
    /**
     * Creates new form HospitalAdminstratorPanel
     */
    public HospitalAdministratorPanel(MainSystem system ,String[] communityList, PatientDirectory patDir, Hospital newHospital, City city, HospitalDirectory hospDir, DoctorDirectory doctorDir, PersonDirectory pd) {
        initComponents();
        this.patDir = patDir;
        this.newHospital = newHospital;
        this.city = city;
        this.hospDir = hospDir;
        this.docDir = doctorDir;
        this.pd = pd;
        this.system = system;
        
        model = (DefaultTableModel) hospital_table.getModel();
        hospital_landingPage.setVisible(true);
        
        populateHospTable();
        
        cityJTextField.removeAllItems();
        for(City c:system.getCityList()){
            cityJTextField.addItem(c.getCitName());
        }
        
        hopital_list.removeAllItems();
        for(Hospital h : hospDir.getHospitalList()){
            hopital_list.addItem(String.valueOf(h.getHospNum()));
        }
        
        hospital_landingPage.setVisible(false);
        loginPanel.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hospital_landingPage = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospital_table = new javax.swing.JTable();
        create_hospital_btn = new javax.swing.JButton();
        hospital_dropbox = new javax.swing.JComboBox<>();
        update_hospital = new javax.swing.JTextField();
        update_hospital_btn = new javax.swing.JButton();
        manageDoctorsButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        hospitalJPanel = new javax.swing.JPanel();
        zipcodeTextField = new javax.swing.JTextField();
        streetName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        hospNum = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        saveHospDetails = new javax.swing.JButton();
        communityTextField = new javax.swing.JComboBox<>();
        cityJTextField = new javax.swing.JComboBox<>();
        selectCity = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        manageDoctorsPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        doctor_table = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        doctor_name = new javax.swing.JTextField();
        doctor_cellno = new javax.swing.JTextField();
        doctor_birthdate = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        persontable = new javax.swing.JTable();
        save_updateddoctor = new javax.swing.JButton();
        add_doctorBtn = new javax.swing.JButton();
        populatetables = new javax.swing.JButton();
        hopital_list = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        loginPanel = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        sys_admin_pass = new javax.swing.JTextField();
        sys_admin_id = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        hospital_landingPage.setBackground(new java.awt.Color(0, 118, 82));

        hospital_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hosp num", "StreetName", "City", "ZipCode"
            }
        ));
        jScrollPane1.setViewportView(hospital_table);

        create_hospital_btn.setText("Create New Hospital");
        create_hospital_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_hospital_btnActionPerformed(evt);
            }
        });

        hospital_dropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "streetName", "zipCode" }));

        update_hospital_btn.setText("Update Hospital");
        update_hospital_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_hospital_btnActionPerformed(evt);
            }
        });

        manageDoctorsButton.setText("Manage Doctors");
        manageDoctorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageDoctorsButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Zapfino", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Hospital Admin Panel");

        javax.swing.GroupLayout hospital_landingPageLayout = new javax.swing.GroupLayout(hospital_landingPage);
        hospital_landingPage.setLayout(hospital_landingPageLayout);
        hospital_landingPageLayout.setHorizontalGroup(
            hospital_landingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospital_landingPageLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(hospital_landingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospital_landingPageLayout.createSequentialGroup()
                        .addComponent(manageDoctorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(390, 390, 390))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospital_landingPageLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(hospital_landingPageLayout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addGroup(hospital_landingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(update_hospital, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospital_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(update_hospital_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(create_hospital_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospital_landingPageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(318, 318, 318))
        );
        hospital_landingPageLayout.setVerticalGroup(
            hospital_landingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospital_landingPageLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(76, 76, 76)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(hospital_landingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospital_landingPageLayout.createSequentialGroup()
                        .addComponent(hospital_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update_hospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospital_landingPageLayout.createSequentialGroup()
                        .addGroup(hospital_landingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update_hospital_btn)
                            .addComponent(create_hospital_btn))
                        .addGap(124, 124, 124)))
                .addComponent(manageDoctorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        add(hospital_landingPage, "card2");

        hospitalJPanel.setBackground(new java.awt.Color(0, 118, 82));

        zipcodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipcodeTextFieldActionPerformed(evt);
            }
        });

        streetName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetNameActionPerformed(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("StreetName");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Community");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("City");

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Zipcode");

        hospNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospNumActionPerformed(evt);
            }
        });

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("HosNum");

        saveHospDetails.setText("Save");
        saveHospDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveHospDetailsActionPerformed(evt);
            }
        });

        communityTextField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cityJTextField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityJTextFieldActionPerformed(evt);
            }
        });

        selectCity.setText("Select City");
        selectCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCityActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Zapfino", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Create New Hospital");

        javax.swing.GroupLayout hospitalJPanelLayout = new javax.swing.GroupLayout(hospitalJPanel);
        hospitalJPanel.setLayout(hospitalJPanelLayout);
        hospitalJPanelLayout.setHorizontalGroup(
            hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                        .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveHospDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(zipcodeTextField)
                                    .addComponent(streetName)
                                    .addComponent(communityTextField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(hospitalJPanelLayout.createSequentialGroup()
                                        .addComponent(hospNum, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(cityJTextField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(45, 45, 45)
                        .addComponent(selectCity)
                        .addGap(230, 230, 230))))
        );
        hospitalJPanelLayout.setVerticalGroup(
            hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospitalJPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel2)
                .addGap(129, 129, 129)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(hospNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(streetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(communityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cityJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectCity))
                .addGap(27, 27, 27)
                .addGroup(hospitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(zipcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(saveHospDetails)
                .addGap(206, 206, 206))
        );

        add(hospitalJPanel, "card3");

        manageDoctorsPanel.setBackground(new java.awt.Color(0, 118, 82));

        doctor_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doctor Id", "Contact No", "Doctor Name", "DOB"
            }
        ));
        jScrollPane3.setViewportView(doctor_table);

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Update Doctor");

        jLabel20.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Name:");

        jLabel21.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Contact No:");

        jLabel22.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("BirthDate:");

        persontable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Contact No", "BirthDate", "Community"
            }
        ));
        jScrollPane4.setViewportView(persontable);

        save_updateddoctor.setText("Upate");
        save_updateddoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_updateddoctorActionPerformed(evt);
            }
        });

        add_doctorBtn.setText("Add Doctor");
        add_doctorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_doctorBtnActionPerformed(evt);
            }
        });

        populatetables.setText("Populate Tables");
        populatetables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populatetablesActionPerformed(evt);
            }
        });

        hopital_list.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageDoctorsPanelLayout = new javax.swing.GroupLayout(manageDoctorsPanel);
        manageDoctorsPanel.setLayout(manageDoctorsPanelLayout);
        manageDoctorsPanelLayout.setHorizontalGroup(
            manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageDoctorsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(doctor_name, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(doctor_cellno, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(doctor_birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55))
            .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(add_doctorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(populatetables, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(hopital_list, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(save_updateddoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        manageDoctorsPanelLayout.setVerticalGroup(
            manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(doctor_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(doctor_cellno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(doctor_birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(manageDoctorsPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(82, 82, 82)
                .addGroup(manageDoctorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_doctorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(populatetables, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hopital_list, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save_updateddoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(238, Short.MAX_VALUE))
        );

        add(manageDoctorsPanel, "card5");

        loginPanel.setBackground(new java.awt.Color(0, 118, 82));

        jLabel47.setFont(new java.awt.Font("Zapfino", 1, 24)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Hospital Admin Login -1");

        jButton5.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jButton5.setText("Login");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("ID:");

        jLabel44.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("Password:");

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(549, 549, 549)
                        .addComponent(sys_admin_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(429, 429, 429)
                        .addComponent(jLabel47))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(419, 419, 419)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addComponent(jLabel43)))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(486, 486, 486)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(163, Short.MAX_VALUE))
            .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(loginPanelLayout.createSequentialGroup()
                    .addGap(548, 548, 548)
                    .addComponent(sys_admin_id, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(235, Short.MAX_VALUE)))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel47)
                .addGap(153, 153, 153)
                .addComponent(jLabel43)
                .addGap(36, 36, 36)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sys_admin_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44))
                .addGap(63, 63, 63)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
            .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(loginPanelLayout.createSequentialGroup()
                    .addGap(252, 252, 252)
                    .addComponent(sys_admin_id, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(413, Short.MAX_VALUE)))
        );

        add(loginPanel, "card9");
    }// </editor-fold>//GEN-END:initComponents

    private void create_hospital_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_hospital_btnActionPerformed
        // TODO add your handling code here:
        //        CreateNewHospital hospitalPane = new CreateNewHospital(hospital);
        //        splitPane.setRightPanel(hopitalPane);
        hospitalJPanel.setVisible(true);
        hospital_landingPage.setVisible(false);
    }//GEN-LAST:event_create_hospital_btnActionPerformed

    private void update_hospital_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_hospital_btnActionPerformed
        // TODO add your handling code here:

        if(hospital_table.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Please select a Hospital");
        }
        else{
            int hospNum_check= (int)model.getValueAt(hospital_table.getSelectedRow(), 0);
            if(update_hospital.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Cannot keep null");
            }
            else{
                String hospupdate_str = update_hospital.getText();
            for(Community c: city.getCommList()){
            for(Hospital i: c.getHospitalList()){
                if(hospNum_check == i.getHospNum()){
                    hospital = i;
                }
            }
            }

            String hospitalUpdateCriteria = String.valueOf(hospital_dropbox.getSelectedItem());
            if(hospitalUpdateCriteria == " "){
                JOptionPane.showMessageDialog(this,"Select Valid Dropbox Item");
            }
            else{
                if(hospitalUpdateCriteria == "hospNum"){
                    int new_hospNum = Integer.parseInt(hospupdate_str);
                    hospital.setHospNum(new_hospNum);
                    populateHospTable();
                }

                if(hospitalUpdateCriteria == "streetName"){
                    String new_streetName = hospupdate_str;
                    hospital.setStreetName(new_streetName);
                    populateHospTable();
                }

                if(hospitalUpdateCriteria == "zipCode"){
                    long new_zipCode = Long.parseLong(hospupdate_str);
                    hospital.setZipcode(new_zipCode);
                    populateHospTable();
                }

            }
            }
            
        }
    }//GEN-LAST:event_update_hospital_btnActionPerformed

    private void manageDoctorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageDoctorsButtonActionPerformed
        // TODO add your handling code here:
        manageDoctorsPanel.setVisible(true);
        hospital_landingPage.setVisible(false);
    }//GEN-LAST:event_manageDoctorsButtonActionPerformed

    private void zipcodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipcodeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipcodeTextFieldActionPerformed

    private void streetNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetNameActionPerformed

    private void hospNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospNumActionPerformed

    private void saveHospDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveHospDetailsActionPerformed
        // TODO add your handling code here:
        boolean true_hospNum = false;
        int HospNum1 = 100;
        if(parser.isInteger(hospNum.getText())){
            HospNum1 = Integer.parseInt(hospNum.getText());
            
                for (Hospital h:hospDir.getHospitalList()){
                if(h.getHospNum() == HospNum1){
                    JOptionPane.showMessageDialog(this,"This Hospital Already Exist");
                    true_hospNum = true;
                }
            }

            long Zipcode1 = 12987;

            if(!true_hospNum){
                String city1 = String.valueOf(cityJTextField.getSelectedItem());
                String streetName1 = streetName.getText();
                String community1 = String.valueOf(communityTextField.getSelectedItem());
                if(parser.isInteger(hospNum.getText())){
                    Zipcode1 =Long.parseLong(zipcodeTextField.getText());
                    for(City c: system.getCityList()){
                    if(c.getCitName() == city1){
                        for(Community comm: c.getCommList()){
                            if(comm.getCommName() == community1){
                                create_hosp = comm;
                            }
                        }
                    }
                }

                hospDir.createHospital(HospNum1,streetName1,community1,city1);
                create_hosp.createHospital(HospNum1,streetName1,community1,city1);
                populateHospTable();
                JOptionPane.showMessageDialog(this,"New Hospital Created with Id: "+HospNum1);

                hospNum.setText("");
                streetName.setText("");
                zipcodeTextField.setText("");
                }
                else{JOptionPane.showMessageDialog(this,"Type Mismached");}
            }
        }
        else{JOptionPane.showMessageDialog(this,"Type Mismached");}
        //        Community cc = city.getCommList();

    }//GEN-LAST:event_saveHospDetailsActionPerformed

    private void add_doctorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_doctorBtnActionPerformed
        // TODO add your handling code here:
        if(persontable.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Please select a person to add");
        }
        if(hopital_list.getSelectedItem() == null){
            JOptionPane.showMessageDialog(this, "Please select a hospital to add doctor");
        }
        else
        {
            long ppn = (long)model12.getValueAt(persontable.getSelectedRow(),1);
            for(Person p : pd.getPersonList()){
                if(ppn == p.getContactNo()){
                    selectedPerson = p;
                }
            }

            for(Hospital h : hospDir.getHospitalList()){
                if(Integer.parseInt((String)hopital_list.getSelectedItem()) == h.getHospNum()){
                    selectedHospital = h;
                }
            }

            boolean should_doc = false;
            for(Patient p: patDir.getPatientList()){
                if(p.matchByContact(selectedPerson.getContactNo())){
                    JOptionPane.showMessageDialog(this, "This Person is a Patient and cannot become Doctor");
                    should_doc = true;
                }
            }

            if(!should_doc){
                Doctor new_doc = new Doctor(selectedPerson);
                selectedHospital.addDoctorToHospital(new_doc);
                docDir.addDoctor(new_doc);
                JOptionPane.showMessageDialog(this, "Added "+selectedPerson.getName()+ " to Hospital");
                should_doc = false;
                PopulateManageDoctorTable();
            }

        }//end else
    }//GEN-LAST:event_add_doctorBtnActionPerformed

    private void populatetablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populatetablesActionPerformed
        // TODO add your handling code here:
        model12 = (DefaultTableModel) persontable.getModel();
        model12.setRowCount(0);

        long[] doc_cnum = new long[docDir.getDoctorList().size()];

        for(int i=0; i<(docDir.getDoctorList()).size(); i++){
            doc_cnum[i] = docDir.getDoctorList().get(i).getPerson().getContactNo();
            System.out.println("This Docto ss: "+docDir.getDoctorList().get(i).getPerson().getContactNo());
        }

        for (Person per : pd.getPersonList()) {
            boolean a = true;
            for(long i : doc_cnum){
                if(i == per.getContactNo()){
                    System.out.print("This Person is a doctor");
                    a = false;
                }
            }
            if(a == true){
                Object[] row = new Object[4];

                row[0] = per.getName();
                row[1] = per.getContactNo();
                row[2] = per.getDob();
                row[3] = per.getComm();
                model12.addRow(row);
                a = true;
            }
        }

        DefaultTableModel model11 = (DefaultTableModel) doctor_table.getModel();
        model11.setRowCount(0);

        for(Doctor dr: docDir.getDoctorList()){
            Object[] row = new Object[5];
            row[0] = dr.getId();
            row[1] = dr.getPerson().getContactNo();
            row[2] = dr.getPerson().getName();
            row[3] = dr.getPerson().getDob();
            model11.addRow(row);
        }

    }//GEN-LAST:event_populatetablesActionPerformed

    public void PopulateManageDoctorTable(){
        DefaultTableModel model11 = (DefaultTableModel) doctor_table.getModel();
        model11.setRowCount(0);

        for(Doctor dr: docDir.getDoctorList()){
            Object[] row = new Object[5];
            row[0] = dr.getId();
            row[1] = dr.getPerson().getContactNo();
            row[2] = dr.getPerson().getName();
            row[3] = dr.getPerson().getDob();
            model11.addRow(row);
        }
    }
    private void save_updateddoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_updateddoctorActionPerformed
        // TODO add your handling code here:
        long dno_table = 2345634;
        String dname_table = String.valueOf(doctor_name.getText());
        if(parser.isLong(doctor_cellno.getText()) || parser.isInteger(doctor_cellno.getText())){
            dno_table = Long.parseLong(doctor_cellno.getText());
        }
        else{ JOptionPane.showMessageDialog(this, "Type Mismached"); }
        LocalDate ddon_table = parser.convertToDate(doctor_birthdate.getText());
        update_doc_obj.getPerson().setName(dname_table);
        update_doc_obj.getPerson().setContactNo(dno_table);
        update_doc_obj.getPerson().setDob(ddon_table);
           
        PopulateManageDoctorTable();
    }//GEN-LAST:event_save_updateddoctorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model11 = (DefaultTableModel) doctor_table.getModel();
        
        if(doctor_table.getSelectedRow()>=0){
            long did_table = (long)model11.getValueAt(doctor_table.getSelectedRow(),0);
            
            for(Hospital h : hospDir.getHospitalList()){
                for(Doctor d: h.getDoctorHospital()){
                    if(did_table == d.getId()){
                        update_doc_obj = d;
                        doctor_name.setText(d.getPerson().getName());
                        doctor_cellno.setText(String.valueOf(d.getPerson().getContactNo()));
                        doctor_birthdate.setText(parser.covertDateToString(d.getPerson().getDob()));
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void selectCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCityActionPerformed
        // TODO add your handling code here:
        String city_fetch_comm = String.valueOf(cityJTextField.getSelectedItem());
        communityTextField.removeAllItems();
        
        for (City c: system.getCityList()){
            System.out.println("City is: "+city_fetch_comm);
            System.out.println("City DB is: "+c.getCitName());
            if(city_fetch_comm == c.getCitName()){
                for(Community comm: c.getCommList()){
                    System.out.println("Comm is: "+comm.getCommName());
                    communityTextField.addItem(comm.getCommName());
                }
            }
        }
    }//GEN-LAST:event_selectCityActionPerformed

    private void cityJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityJTextFieldActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(!parser.checkNull(sys_admin_pass.getText()) && !parser.checkNull(sys_admin_id.getText())){
            if(parser.isInteger(sys_admin_id.getText())){
                int loginId = Integer.parseInt(sys_admin_id.getText());
                String loginPass = sys_admin_pass.getText();

                if(loginId == 1 && loginPass.equals("1111"))
                {
                    hospital_landingPage.setVisible(true);
                    loginPanel.setVisible(false);
                }
            }
            else{
                JOptionPane.showMessageDialog(this,"ID should be INT");
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Cannot Keep null");
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    public void populateHospTable(){
        model.setRowCount(0);
        for(City cty: system.getCityList()){
            for(Community c: cty.getCommList()){
                for(Hospital h: c.getHospitalList()){
                    Object[] row = new Object[5];
                    row[0]= h.getHospNum();
                    row[1]= h.getStreetName();
                    row[2]= h.getCity();
                    row[3]= h.getZipcode();
                    row[4]= (h.getDoctorHospital()).size();
                    model.addRow(row);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_doctorBtn;
    private javax.swing.JComboBox<String> cityJTextField;
    private javax.swing.JComboBox<String> communityTextField;
    private javax.swing.JButton create_hospital_btn;
    private javax.swing.JTextField doctor_birthdate;
    private javax.swing.JTextField doctor_cellno;
    private javax.swing.JTextField doctor_name;
    private javax.swing.JTable doctor_table;
    private javax.swing.JComboBox<String> hopital_list;
    private javax.swing.JTextField hospNum;
    private javax.swing.JPanel hospitalJPanel;
    private javax.swing.JComboBox<String> hospital_dropbox;
    private javax.swing.JPanel hospital_landingPage;
    private javax.swing.JTable hospital_table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton manageDoctorsButton;
    private javax.swing.JPanel manageDoctorsPanel;
    private javax.swing.JTable persontable;
    private javax.swing.JButton populatetables;
    private javax.swing.JButton saveHospDetails;
    private javax.swing.JButton save_updateddoctor;
    private javax.swing.JButton selectCity;
    private javax.swing.JTextField streetName;
    private javax.swing.JTextField sys_admin_id;
    private javax.swing.JTextField sys_admin_pass;
    private javax.swing.JTextField update_hospital;
    private javax.swing.JButton update_hospital_btn;
    private javax.swing.JTextField zipcodeTextField;
    // End of variables declaration//GEN-END:variables
}
