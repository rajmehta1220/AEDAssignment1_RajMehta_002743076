/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.*;

/**
 *
 * @author rajmehta
 */
public class CommunityAdminPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunityAdminPanel
     */
    
    City city;
    DefaultTableModel model;
    DefaultTableModel model1;
    String[] communityDropboxList;
    String selectedCommunity;
    Community community;
    Hospital hospital;
    House house;
    
    public CommunityAdminPanel() {
        initComponents();
    }
    
    public CommunityAdminPanel(City city, String[] communityDropboxList) {
        initComponents();
        this.city = city;
        this.communityDropboxList = communityDropboxList;
        
        community_dropbox.removeAllItems();
        for(String s:communityDropboxList){
            community_dropbox.addItem(s);
        }
        
    model = (DefaultTableModel) hospital_table.getModel();
    model1 = (DefaultTableModel) house_table.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospital_table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        house_table = new javax.swing.JTable();
        community_dropbox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        create_hospital_btn = new javax.swing.JButton();
        create_new_house = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        hospital_dropbox = new javax.swing.JComboBox<>();
        update_hospital = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        update_hospital_btn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        house_dropbox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        update_house = new javax.swing.JTextField();
        update_house_btn = new javax.swing.JButton();
        search_comm_btn = new javax.swing.JButton();
        delete_hospital_btn = new javax.swing.JButton();
        delete_house_btn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 118, 82));

        jLabel1.setFont(new java.awt.Font("Zapfino", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Modify the information under a Community");

        hospital_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hosp num", "StreetName", "City", "ZipCode"
            }
        ));
        jScrollPane1.setViewportView(hospital_table);

        house_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "House Num", "Street Name", "City", "No of members"
            }
        ));
        jScrollPane2.setViewportView(house_table);

        community_dropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Communities");

        create_hospital_btn.setText("Create New Hospital");
        create_hospital_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_hospital_btnActionPerformed(evt);
            }
        });

        create_new_house.setText("Create New House");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Modify:");

        hospital_dropbox.setEditable(true);
        hospital_dropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "streetName", "zipCode" }));
        hospital_dropbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospital_dropboxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("New Value:");

        update_hospital_btn.setText("Update Hospital");
        update_hospital_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_hospital_btnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Modify:");

        house_dropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "houseUnit", "streetName" }));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("New Value:");

        update_house_btn.setText("Update House");
        update_house_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_house_btnActionPerformed(evt);
            }
        });

        search_comm_btn.setText("Search");
        search_comm_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_comm_btnActionPerformed(evt);
            }
        });

        delete_hospital_btn.setText("Delete Hospital");

        delete_house_btn.setText("Delete House");

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Houses in Community:");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Hospitals in Community:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(create_new_house, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(delete_house_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(community_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(search_comm_btn)
                                .addGap(172, 172, 172)))
                        .addGap(175, 175, 175))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(create_hospital_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(delete_hospital_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(update_hospital_btn)
                                        .addGap(32, 32, 32))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(hospital_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(update_hospital, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5))
                                        .addGap(18, 18, 18)
                                        .addComponent(update_house, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(97, 97, 97))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(update_house_btn)
                                .addGap(138, 138, 138))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(house_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(community_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_comm_btn))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hospital_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(update_hospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(update_hospital_btn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delete_hospital_btn)
                            .addComponent(create_hospital_btn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(house_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(update_house, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(update_house_btn)
                        .addGap(100, 100, 100))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(create_new_house)
                            .addComponent(delete_house_btn))
                        .addGap(19, 19, 19))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void search_comm_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_comm_btnActionPerformed
        // TODO add your handling code here:
        selectedCommunity = String.valueOf(community_dropbox.getSelectedItem());
        
        for(Community c: city.getCommList()){
            if(selectedCommunity == c.getCommName())
                community = c;
        }
        
        model.setRowCount(0);
        for(Hospital h: community.getHospitalList()){
            Object[] row = new Object[4];
            row[0]= h.getHospNum();
            row[1]= h.getStreetName();
            row[2]= h.getCity();
            row[3]= h.getZipcode();
            model.addRow(row);
        }
        model1.setRowCount(0);
        for(House h: community.getHouseList()){
            Object[] row = new Object[4];
            row[0]= h.getHouseNum();
            row[1]= h.getStreetName();
            row[2]= h.getCity();
            row[3]= (h.getFamiliyMembers()).size();
            model1.addRow(row);
        }
    }//GEN-LAST:event_search_comm_btnActionPerformed

    private void update_hospital_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_hospital_btnActionPerformed
        // TODO add your handling code here:
        
        if(hospital_table.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Please select a Hospital");
        }
        else{
            int hospNum_check= (int)model.getValueAt(hospital_table.getSelectedRow(), 0);
            String hospupdate_str = update_hospital.getText();
  
            for(Hospital i:community.getHospitalList()){
                if(hospNum_check == i.getHospNum()){
                    hospital = i;
                }
            }
        
        String hospitalUpdateCriteria = String.valueOf(hospital_dropbox.getSelectedItem());
        if(hospitalUpdateCriteria == " "){
            JOptionPane.showMessageDialog(this,"Select Valid Dropbox Item");
        }
        else{
            if(hospitalUpdateCriteria == "hospNum"){
                int new_hospNum = Integer.parseInt(hospupdate_str);
                hospital.setHospNum(new_hospNum);
                populateHospTable();
            }
            
            if(hospitalUpdateCriteria == "streetName"){
                String new_streetName = hospupdate_str;
                hospital.setStreetName(new_streetName);
                populateHospTable();
            }
            
            if(hospitalUpdateCriteria == "zipCode"){
                long new_zipCode = Long.parseLong(hospupdate_str);
                hospital.setZipcode(new_zipCode);
                populateHospTable();
            }
            
        }
     }
    }//GEN-LAST:event_update_hospital_btnActionPerformed

    private void update_house_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_house_btnActionPerformed
        // TODO add your handling code here:
        if(house_table.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Please select a House");
        }
        else{
            int houseNum_check= (int)model1.getValueAt(house_table.getSelectedRow(), 0);
            String houseupdate_str = update_house.getText();
  
            for(House i:community.getHouseList()){
                if(houseNum_check == i.getHouseNum()){
                    house = i;
                }
            }
        
        String houseUpdateCriteria = String.valueOf(house_dropbox.getSelectedItem());
        if(houseUpdateCriteria == " "){
            JOptionPane.showMessageDialog(this,"Select Valid Dropbox Item");
        }
        else{
            if(houseUpdateCriteria == "houseNum"){
                int new_houseNum = Integer.parseInt(houseupdate_str);
                house.setHouseNum(new_houseNum);
                populateHouseTable();
            }
            
            if(houseUpdateCriteria == "streetName"){
                String new_streetName = houseupdate_str;
                house.setStreetName(new_streetName);
                populateHouseTable();
            }
            
        }
     }
        
    }//GEN-LAST:event_update_house_btnActionPerformed

    private void create_hospital_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_hospital_btnActionPerformed
        // TODO add your handling code here:
        CreateNewHospital hospitalPane = new CreateNewHospital(hospital);
//        splitPane.setRightPanel(hopitalPane);   
    hospitalPane.setVisible(true);
    }//GEN-LAST:event_create_hospital_btnActionPerformed

    private void hospital_dropboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospital_dropboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospital_dropboxActionPerformed

    
public void populateHospTable(){
    for(Community c: city.getCommList()){
            if(selectedCommunity == c.getCommName())
                community = c;
        }
        
        model.setRowCount(0);
        for(Hospital h: community.getHospitalList()){
            Object[] row = new Object[4];
            row[0]= h.getHospNum();
            row[1]= h.getStreetName();
            row[2]= h.getCity();
            row[3]= h.getZipcode();
            model.addRow(row);
        }
}

public void populateHouseTable(){
    for(Community c: city.getCommList()){
            if(selectedCommunity == c.getCommName())
                community = c;
        }
        
        model1.setRowCount(0);
        for(House h: community.getHouseList()){
            Object[] row = new Object[4];
            row[0]= h.getHouseNum();
            row[1]= h.getStreetName();
            row[2]= h.getCity();
            row[3]= (h.getFamiliyMembers()).size();
            model1.addRow(row);
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> community_dropbox;
    private javax.swing.JButton create_hospital_btn;
    private javax.swing.JButton create_new_house;
    private javax.swing.JButton delete_hospital_btn;
    private javax.swing.JButton delete_house_btn;
    private javax.swing.JComboBox<String> hospital_dropbox;
    private javax.swing.JTable hospital_table;
    private javax.swing.JComboBox<String> house_dropbox;
    private javax.swing.JTable house_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton search_comm_btn;
    private javax.swing.JTextField update_hospital;
    private javax.swing.JButton update_hospital_btn;
    private javax.swing.JTextField update_house;
    private javax.swing.JButton update_house_btn;
    // End of variables declaration//GEN-END:variables
}
